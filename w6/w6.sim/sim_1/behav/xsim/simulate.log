Vivado Simulator 2020.2
Time resolution is 1 ps
Error for UNEVALUATED test input: U, UUUUU (output=0UUUU0, desired output=UUUUUU)
# Test patterns for calc_core_board.vhd  (verification of data path and controller)
# input format: btnC sw led
# btnC used as reset
# sw contains controller button inputs (C,U,D,L,R) 
# led contains data path outputs: data_out(4 downto 0) & sign_out
# NOTE: test vector file for sequential module (NOT using skips)!
# Reset high
Test OK for test input: 1, 00000 (output=000000, desired output=000000)
<<<<<<< HEAD
Test OK for test input: 1, 00000 (output=000000, desired output=000000)
# Reset low
Test OK for test input: 0, 00000 (output=000000, desired output=000000)
# Move to stage 1 (first operand - set to 9 using Dx1)
# 2 cycles delay for output: 1 from controller and one from BCD-counter
Test OK for test input: 0, 10000 (output=000000, desired output=000000)
Test OK for test input: 0, 00100 (output=000000, desired output=000000)
# Move to stage 2 (2nd operand - set to 8 using Dx1)
Test OK for test input: 0, 10000 (output=000000, desired output=000000)
Test OK for test input: 0, 00100 (output=010010, desired output=010010)
# Move to stage 3 (opcode - PLUS)
Test OK for test input: 0, 10000 (output=010010, desired output=010010)
Test OK for test input: 0, 00001 (output=010000, desired output=010000)
# Move to stage 4: show result
Test OK for test input: 0, 10000 (output=010000, desired output=010000)
ERROR for test input: 0, 00000 (output=000000, desired output=100010)

11 test patterns run, 2 error(s) detected

Failure: This is not a failure: all tests completed
Time: 260 ns  Iteration: 0  Process: /tb_rom_example/line__88  File: C:/Users/bertr/digel/w6/w6.srcs/sim_1/imports/chapter5_starters/ROM_tb.vhd
$finish called at time : 260 ns : File "C:/Users/bertr/digel/w6/w6.srcs/sim_1/imports/chapter5_starters/ROM_tb.vhd" Line 108
=======
Test OK for test input: 0, 01000 (output=000000, desired output=000000)
Test OK for test input: 0, 00100 (output=000000, desired output=000000)
Test OK for test input: 0, 00010 (output=000000, desired output=000000)
Test OK for test input: 0, 00001 (output=000000, desired output=000000)
# press central button
Test OK for test input: 0, 10000 (output=000000, desired output=000000)
# first number = 1
Test OK for test input: 0, 01000 (output=000000, desired output=000000)
Test OK for test input: 0, 00001 (output=000000, desired output=000000)
Test OK for test input: 0, 10000 (output=000010, desired output=000010)
# second number = 2
Test OK for test input: 0, 01000 (output=000010, desired output=000010)
Test OK for test input: 0, 10000 (output=000010, desired output=000010)
# operator = plus
Test OK for test input: 0, 10000 (output=000100, desired output=000100)
Test OK for test input: 0, 01000 (output=000100, desired output=000100)
Test OK for test input: 0, 00001 (output=000100, desired output=000100)
Test OK for test input: 0, 10000 (output=000100, desired output=000100)
Test OK for test input: 0, 00000 (output=000110, desired output=000110)
Test OK for test input: 0, 00000 (output=000110, desired output=000110)
Test OK for test input: 0, 00000 (output=000110, desired output=000110)
Test OK for test input: 0, 00000 (output=000110, desired output=000110)
#start again, value will be 2 (second number from previous calculation)
Test OK for test input: 0, 10000 (output=000110, desired output=000110)
# first number = 8
Test OK for test input: 0, 00100 (output=000100, desired output=000100)
Test OK for test input: 0, 00100 (output=000100, desired output=000100)
Test OK for test input: 0, 00100 (output=000010, desired output=000010)
Test OK for test input: 0, 00100 (output=000000, desired output=000000)
Test OK for test input: 0, 00100 (output=010010, desired output=010010)
Test OK for test input: 0, 01000 (output=010000, desired output=010000)
Test OK for test input: 0, 00001 (output=001110, desired output=001110)
Test OK for test input: 0, 10000 (output=010000, desired output=010000)
# second number = 9
Test OK for test input: 0, 01000 (output=010000, desired output=010000)
Test OK for test input: 0, 01000 (output=010000, desired output=010000)
Test OK for test input: 0, 00100 (output=010010, desired output=010010)
Test OK for test input: 0, 10000 (output=000000, desired output=000000)
# operator = min
Test OK for test input: 0, 01000 (output=010010, desired output=010010)
Test OK for test input: 0, 00100 (output=010010, desired output=010010)
Test OK for test input: 0, 00010 (output=010010, desired output=010010)
Test OK for test input: 0, 00001 (output=010010, desired output=010010)
Test OK for test input: 0, 00010 (output=010010, desired output=010010)
Test OK for test input: 0, 10000 (output=010010, desired output=010010)
Test OK for test input: 0, 00010 (output=000011, desired output=000011)
Test OK for test input: 0, 00001 (output=000011, desired output=000011)
FATAL_ERROR: Vivado Simulator kernel has discovered an exceptional condition from which it cannot recover. Process will terminate. For technical support on this issue, please open a WebCase with this project attached at http://www.xilinx.com/support.
Time: 820 ns  Iteration: 0  Process: /tb_rom_example/line__193
  File: C:/Users/zande/Documents/universiteit/digitale electronica/digel/w6/w6.srcs/sim_1/imports/chapter5_starters/ROM_tb.vhd

HDL Line: C:/Users/zande/Documents/universiteit/digitale electronica/digel/w6/w6.srcs/sim_1/imports/chapte
>>>>>>> ecae7d1a4ff4fca3063760d65812e209a657fce7
